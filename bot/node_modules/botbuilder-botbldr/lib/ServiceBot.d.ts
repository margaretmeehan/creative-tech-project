import { BotFrameworkAdapter, Storage, ConversationReference } from 'botbuilder';
import { StateBot, StateContext } from './botbldr';
export declare class ServiceBot<Conversation = any, User = any> extends StateBot<Conversation, User> {
    adapter: BotFrameworkAdapter;
    constructor(storage?: Storage);
    onRequest(handler: (context: StateContext<Conversation, User>) => Promise<void>): void;
    startConversation(reference: Partial<ConversationReference>, handler: (appContext: StateContext<Conversation, User>) => Promise<void>): Promise<void>;
    continueConversation(reference: Partial<ConversationReference>, handler: (appContext: StateContext<Conversation, User>) => Promise<void>): Promise<void>;
}
export declare class StarterServiceBot<Conversation = any, User = any> extends ServiceBot<Conversation, User> {
    constructor();
}
