"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const botbuilder_1 = require("botbuilder");
class StateContext extends botbuilder_1.BotContext {
    // instead of adding things here, add them in `from()`
    constructor(context) {
        super(context);
    }
    // "from" adds any properties or methods that depend on arguments or async calls or both
    // think of it as an async constructor
    static from(context, conversationState, userState) {
        return __awaiter(this, void 0, void 0, function* () {
            const appContext = new StateContext(context);
            appContext.conversationState = yield conversationState.read(context);
            appContext.userState = yield userState.read(context);
            return appContext;
        });
    }
}
exports.StateContext = StateContext;
//# sourceMappingURL=StateContext.js.map