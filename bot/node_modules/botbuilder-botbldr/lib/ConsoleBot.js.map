{"version":3,"file":"ConsoleBot.js","sourceRoot":"","sources":["../src/ConsoleBot.ts"],"names":[],"mappings":";;AAAA,2CAAoE;AACpE,uCAAmD;AAEnD,gBAAyD,SAAQ,kBAA4B;IAGzF,YAAY,OAAiB;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,2BAAc,EAAE;aAC9B,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;aAC3B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS,CACL,OAEkB;QAElB,IAAI,CAAC,OAAO;aACP,GAAG,CAAC,GAAI,IAAI,CAAC,WAAW,CAAC;aACzB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;CACJ;AAnBD,gCAmBC","sourcesContent":["import { ConsoleAdapter, Storage, MemoryStorage } from 'botbuilder';\nimport { StateBot, StateContext } from './botbldr';\n\nexport class ConsoleBot <Conversation = any, User = any> extends StateBot<Conversation, User> {\n    adapter: ConsoleAdapter;\n\n    constructor(storage?: Storage) {\n        super(storage);\n        this.adapter = new ConsoleAdapter()\n            .use(this.conversationState)\n            .use(this.userState);\n    }\n\n    onRequest(\n        handler: (\n            context: StateContext<Conversation, User>,\n        ) => Promise<void>\n    ) {\n        this.adapter\n            .use(... this.middlewares)\n            .listen(this.do(handler));\n    }\n}\n"]}