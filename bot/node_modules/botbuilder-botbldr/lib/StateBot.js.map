{"version":3,"file":"StateBot.js","sourceRoot":"","sources":["../src/StateBot.ts"],"names":[],"mappings":";;AAAA,2CAAiI;AACjI,uCAAoC;AACpC,iDAA8C;AAE9C,cAAgE,SAAQ,iBAAyC;IAI7G,YAAa,UAAmB,IAAI,0BAAa,EAAE;QAC/C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,iBAAiB,GAAG,IAAI,8BAAiB,CAAe,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,IAAI,sBAAS,CAAO,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,UAAU,CACN,OAAmB;QAEnB,MAAM,CAAC,2BAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;IAC7E,CAAC;CACJ;AAfD,4BAeC","sourcesContent":["import { BotContext, ConversationReference, Middleware, Storage, ConversationState, UserState, MemoryStorage } from 'botbuilder';\nimport { BaseBot } from './BaseBot';\nimport { StateContext } from './StateContext';\n\nexport abstract class StateBot <Conversation = any, User = any> extends BaseBot<StateContext<Conversation, User>> {\n    conversationState: ConversationState<Conversation>;\n    userState: UserState<User>;\n\n    constructor (storage: Storage = new MemoryStorage()) {\n        super();\n        this.conversationState = new ConversationState<Conversation>(storage);\n        this.userState = new UserState<User>(storage);\n    }\n\n    getContext(\n        context: BotContext,\n    ) {\n        return StateContext.from(context, this.conversationState, this.userState)\n    }\n}\n"]}