import { BotContext, ConversationReference, Middleware, MiddlewareHandler } from 'botbuilder';
export declare abstract class BaseBot<AppContext> {
    protected middlewares: (Middleware | MiddlewareHandler)[];
    protected do(handler: (appContext: AppContext) => Promise<void>): (context: BotContext) => Promise<void>;
    use(middleware: Middleware | MiddlewareHandler): this;
    abstract getContext(context: BotContext): Promise<AppContext>;
    abstract onRequest(handler: (appContext: AppContext) => Promise<void>): void;
    startConversation(reference: Partial<ConversationReference>, handler: (appContext: AppContext) => Promise<void>): Promise<void>;
    continueConversation(reference: Partial<ConversationReference>, handler: (appContext: AppContext) => Promise<void>): Promise<void>;
}
